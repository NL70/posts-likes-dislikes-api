const express=require("express"),{pool}=require("../config"),crypto=require("crypto"),usersRouter=express.Router(),getUser=(a,b)=>{const c=a.params.userId;pool.query("SELECT * FROM users WHERE id=$1",[c],(a,c)=>a?void b.status(500).json({status:"error",message:a.message}):void b.status(200).json({data:c.rows[0]}))},addUser=(a,b)=>{const{username:c,password:d}=a.body;return c&&d?void pool.query("INSERT INTO users (username, password) VALUES ($1, $2) RETURNING *",[c,getHashedPassword(d)],(a,c)=>a?void b.status(500).json({status:"error",message:a.message}):void(delete c.rows[0].password,b.status(201).json({status:"Success",message:"User added.",data:c.rows[0]}))):void b.status(400).json({status:"error",message:"Username/Password cannot be empty."})},getHashedPassword=a=>{const b=crypto.createHash("sha256"),c=b.update(a).digest("base64");return c};usersRouter.get("/:userId",getUser),usersRouter.post("/",addUser),module.exports=usersRouter;